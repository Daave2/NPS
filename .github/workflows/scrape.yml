name: Run Playwright Scraper

# ────────────────────────────────────────────────────────────────────────────────
# TRIGGERS: manual + every hour
# ────────────────────────────────────────────────────────────────────────────────
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # at :00 every hour

# ────────────────────────────────────────────────────────────────────────────────
# CANCEL IN‐PROGRESS RUNS IF RE‐TRIGGERED
# ────────────────────────────────────────────────────────────────────────────────
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'
  UK_TARGET_HOURS: '08 11 14 17 20'  # BST hours you actually want to scrape

jobs:
  # ──────────────────────────────────────────────────────────────────────────────
  # 1) CHECK‐TIME
  # ──────────────────────────────────────────────────────────────────────────────
  check-time:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.set.outputs.run_job }}
    steps:
      - name: Decide whether to run scraper
        id: set
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual run → proceeding"
            echo "run_job=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          CURRENT_UK_HOUR=$(TZ="Europe/London" date +'%H')
          echo "UK hour: ${CURRENT_UK_HOUR}"
          if [[ " ${{ env.UK_TARGET_HOURS }} " =~ " ${CURRENT_UK_HOUR} " ]]; then
            echo "run_job=true" >> $GITHUB_OUTPUT
          else
            echo "run_job=false" >> $GITHUB_OUTPUT
          fi

  # ──────────────────────────────────────────────────────────────────────────────
  # 2) SCRAPE‐AND‐COMMIT
  # ──────────────────────────────────────────────────────────────────────────────
  scrape-and-submit:
    needs: check-time
    if: needs.check-time.outputs.run_job == 'true'
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install system deps for Playwright browsers
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libgbm1 \
            libgtk-3-0 \
            libpangocairo-1.0-0 \
            libxcomposite1 \
            libxrandr2 \
            libxdamage1 \
            libxfixes3 \
            libxss1 \
            libxtst6 \
            libxcursor1 \
            libdbus-1-3 \
            curl \
            unzip

      - name: Install Python deps & Playwright browsers
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt playwright
          python -m playwright install --with-deps

      - name: Run scraper
        run: python scrape.py
        env:
          GOOGLE_EMAIL:    ${{ secrets.GOOGLE_EMAIL }}
          GOOGLE_PASSWORD: ${{ secrets.GOOGLE_PASSWORD }}
          MAIN_WEBHOOK:    ${{ secrets.MAIN_WEBHOOK }}
          ALERT_WEBHOOK:   ${{ secrets.ALERT_WEBHOOK }}

      - name: Commit & push updated state
        if: always()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          CHANGED=false

          if [ -f comments_log.csv ]; then
            git add comments_log.csv
            CHANGED=true
          fi

          if [ -f auth_state.json ]; then
            git add auth_state.json
            CHANGED=true
          fi

          if [ "$CHANGED" = true ]; then
            git diff --quiet --cached || git commit -m "ci: update comments_log.csv & auth_state.json"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
